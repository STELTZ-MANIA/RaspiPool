sensor:
  - platform: template
    sensors:
      pump_state:
        friendly_name: "Pump State"
        value_template: >-
          {% if is_state('switch.pump', 'on') %}
            {% if is_state('switch.turbo', 'on') %}
                high
            {% else %}
                low
            {% endif %}
          {% else %}
            off
          {% endif %}

      runtime_left:
        # How much time remains for the pump to run today
        friendly_name: "Pump runtime left"
        unit_of_measurement: "h"
        value_template: >-
          {{ [0, (states('sensor.daily_runtime_readonly')|float(0) - states('sensor.cummulated_flow_low')|float(0)) | round(1,default=0)] | max}}
        # TODO - remove
        #          {{(states('input_number.notify_cycles')|float - (states('sensor.cummulated_flow_low')|float + states('sensor.cummulated_flow_high')|float * 5) / (state_attr('input_datetime.recirculation','hour')+ state_attr('input_datetime.recirculation','minute')|float/60) )|round(1)}}

      runtime_left_human:
        # runtime left in human readable form
        friendly_name: "Pump runtime left"
        value_template: >-
          {% set hours = states('sensor.time_at_work') | float %}
          {% set minutes = ((hours % 1) * 60) | int %}
          {% set hours = (hours - (hours % 1)) | int %}
          {{ '%02i:%02i'%(hours, minutes) }}

  - platform: history_stats
    name: cummulated_flow_low
    entity_id: sensor.pump_state
    state: "low"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    end: "{{ now() }}"

  - platform: history_stats
    name: cummulated_flow_high
    entity_id: sensor.pump_state
    state: "high"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0) }}"
    end: "{{ now() }}"

  - platform: statistics
    name: flow_on
    entity_id: binary_sensor.watermeter
    state_characteristic: count
    max_age:
      seconds: 5
    sampling_size: 1
    precision: 0

  - platform: statistics
    name: pulses_per_minute
    entity_id: binary_sensor.watermeter
    state_characteristic: count
    max_age:
      minutes: 1
    sampling_size: 760 # max 2 * 38 * 10 L/min
    precision: 0

  - platform: template
    sensors:
      flow_rate:
        friendly_name: "Flow Rate"
        value_template: >-
          {{(states('sensor.pulses_per_minute')|int(0) / 76)|float|round(1,default=0)}}
        unit_of_measurement: "L/min"

binary_sensor:
  - platform: rpi_gpio
    ports:
      14: watermeter

  - platform: template
    sensors:
      flow_on_icon:
        friendly_name: "Flow Cell State"
        value_template: "{{ states('sensor.flow_on')|int(default=0) == 1 }}"
        icon_template: >-
          {% if states('sensor.flow_on')|int(default=0) == 1 %}
            mdi:water
          {% else %}
            mdi:water-off
          {% endif %}
