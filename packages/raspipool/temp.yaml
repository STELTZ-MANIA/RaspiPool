sensor:
  - platform: template
    sensors:
      pool_temp:
        friendly_name: "Water Temperature"
        value_template: "{{ ((states('sensor.pool_temp_fahrenheit')|float(0) - 32)*5/9)|round(1) }}"
        icon_template: mdi:coolant-temperature
        unit_of_measurement: "C"

  - platform: template
    # workaround for homekit. If the unit is 'C', homekit is confused
    # if the unit is '°C' above, homeassistant is confused.
    # however, if the temperature is set in Celsius, homeassistant somehow
    # figures out automagically that it should be F
    # F*ED UP!
    sensors:
      pool_temp_homekit:
        friendly_name: "Water Temperature"
        device_class: temperature
        value_template: >-
          {% if is_state("input_boolean.imperial", "on") %}
            {{states('sensor.pool_temp')}}
          {% else %}
            {{states('sensor.pool_temp_fahrenheit')}}
          {% endif %}
        icon_template: mdi:coolant-temperature
        unit_of_measurement: "°C"

  - platform: template
    sensors:
      pool_temp_fahrenheit:
        friendly_name: "Water Temperature"
        value_template: "{{ states('sensor.pool_water_temperature')|float(0)|round(1,default=0) }}"
        icon_template: mdi:coolant-temperature
        unit_of_measurement: "F"
  #  - platform: onewire
  #    names:
  #      28-0319a2792bc3: Pool Water
  #    scan_interval: 10

  - platform: template
    sensors:
      today_max_temp:
        friendly_name: "Today Maximum Temperature"
        unique_id: "today_maximum_temperature"
        device_class: temperature
        unit_of_measurement: "°F"
        # TODO: might not work as expected in Centigrades!!
        value_template: >-
          {% set start = now().replace(hour=0,minute=0,second=0, microsecond=0) + timedelta(days=1) %}
          {% set end = (start + timedelta(days=1)) %}
          {% set start = start.strftime("%Y-%m-%dT%H:%M:%S+00:00") %}
          {% set end = end.strftime("%Y-%m-%dT%H:%M:%S+00:00") %}
          {{ state_attr('weather.openweathermap', 'forecast') | selectattr('datetime', '>=', start) | selectattr('datetime','<=', end) | map(attribute='temperature') | list | max}}
      today_max_temp_safe:
        friendly_name: "Today Maximum Temperature"
        device_class: temperature
        unit_of_measurement: "°F"
        # TODO: might not work as expected in Centigrades!!
        value_template: >-
          {{[states('sensor.today_max_temp'), states('sensor.pool_temp_fahrenheit')] | max }}

  # Atlas Resistance Temperature Detector (RTD)
  - platform: atlas_scientific
    # For serial ports use:
    #   port: /dev/ttyUSB0
    # For I2C enter the hex device id
    port: 0x66
    scan_interval: 120
    scale: "F"

  - platform: statistics
    name: pool_water_temperature
    entity_id: sensor.ezo_temperature
    state_characteristic: mean
    max_age:
      hours: 24
    precision: 1

input_number:
  calibrate_temp:
    min: 30
    max: 100
    step: 1
    unit_of_measurement: "F"
    icon: mdi:coolant-temperature
    mode: box
    initial: 70

automation:
  #TODO - fix this!!!!
  - alias: temp_low
    trigger:
      - platform: numeric_state
        entity_id: sensor.pool_temp
        below: 7
        for:
          hours: 24
    condition:
      condition: not
      conditions:
        - condition: state
          entity_id: input_boolean.imperial
          state: "on"
    action:
      - data_template:
          message:
            "{{trigger.to_state.attributes.friendly_name}} has been less than {{trigger.below}} °C
            for more than {{trigger.for}}"
          title: "Temperature Low - {{trigger.to_state.state}} °C!"
        service: notify.notify

  - alias: temp_low_imperial
    trigger:
      - platform: numeric_state
        entity_id: sensor.pool_temp_fahrenheit
        below: 44
        for:
          hours: 24
    condition:
      - condition: state
        entity_id: input_boolean.imperial
        state: "on"
    action:
      - data_template:
          message:
            "{{trigger.to_state.attributes.friendly_name}} has been less than {{trigger.below}} °F
            for more than {{trigger.for}}"
          title: "Temperature Low - {{trigger.to_state.state}} °F!"
        service: notify.notify

  - alias: temp_high
    trigger:
      - platform: numeric_state
        entity_id: sensor.pool_temp
        above: 29
        for:
          hours: 24
    condition:
      condition: not
      conditions:
        - condition: state
          entity_id: input_boolean.imperial
          state: "on"
    action:
      - data_template:
          message:
            "{{trigger.to_state.attributes.friendly_name}} has been more than {{trigger.above}} °C
            for more than {{trigger.for}}"
          title: "Temperature High - {{trigger.to_state.state}} °C!"
        service: notify.notify

  - alias: temp_high
    trigger:
      - platform: numeric_state
        entity_id: sensor.pool_temp_fahrenheit
        above: 84
        for:
          hours: 24
    condition:
      - condition: state
        entity_id: input_boolean.imperial
        state: "on"
    action:
      - data_template:
          message:
            "{{trigger.to_state.attributes.friendly_name}} has been more than {{trigger.above}} °F
            for more than {{trigger.for}}"
          title: "Temperature High - {{trigger.to_state.state}} °F!"
        service: notify.notify

  - alias: read_temp_at_end_of_day
    trigger:
      - platform: time
        at: "23:59:59"
    condition: []
    action:
      - service: homeassistant.update_entity
        entity_id: sensor.today_max_temp
