sensor:
  - platform: template
    sensors:
      muriatic_tank:
        friendly_name: "Acid tank"
        value_template: "{{ states('input_number.muriatic_tank')|round(2)}}"
      muriatic_inject:
        friendly_name: "Acid injection"
        value_template: "{{ states('input_number.muriatic_inject')|round(0)}}"
      muriatic_inject_imperial:
        friendly_name: "Acid injection"
        value_template: "{{ states('input_number.muriatic_inject_imperial')|round(1)}}"

  - platform: history_stats
    name: muriatic_on_last_hour
    entity_id: switch.ph
    state: "on"
    type: time
    end: "{{now().replace(minute=0).replace(second=0)}}"
    duration: 01:00:00

  - platform: history_stats
    name: muriatic_on_last_48h
    entity_id: switch.ph
    state: "on"
    type: time
    end: "{{now()}}"
    duration: 48:00:00

input_number:
  muriatic_tank:
    min: 0
    max: 76
    step: 1
    unit_of_measurement: "l"
    icon: mdi:blood-bag
    name: Acid Tank
  muriatic_tank_imperial:
    min: 0
    max: 20
    step: 1
    unit_of_measurement: "gal"
    icon: mdi:blood-bag
    name: Acid Tank
  muriatic_concentration:
    min: 5
    max: 30
    step: 1
    unit_of_measurement: "%"
    icon: mdi:water-percent
  muriatic_speed:
    min: 0
    max: 66
    step: 1
    unit_of_measurement: "ml/min"
    icon: mdi:needle
  muriatic_speed_imperial:
    min: 0.1
    max: 25
    step: 0.1
    unit_of_measurement: "gal/day"
    icon: mdi:needle
  notify_muriatic_high:
    name: Acid Overfeed
    min: 0
    max: 100
    step: 0.1
    unit_of_measurement: "l/48h"
    icon: mdi:format-color-fill
  notify_muriatic_high_imperial:
    name: Acid Overfeed
    min: 0
    max: 25
    step: 0.1
    unit_of_measurement: "gal/48h"
    icon: mdi:format-color-fill
  notify_muriatic_tank:
    name: Acid Tank Low
    min: 0
    max: 8
    step: 0.1
    unit_of_measurement: "l"
    icon: mdi:flask-empty-outline
  notify_muriatic_tank_imperial:
    name: Acid Tank Low
    min: 0
    max: 2
    step: 0.1
    unit_of_measurement: "gal"
    icon: mdi:flask-empty-outline
  muriatic_inject:
    min: 0
    max: 10000
    step: 1
    unit_of_measurement: "ml"
    icon: mdi:beaker
    mode: box
  muriatic_inject_imperial:
    min: 0
    max: 400
    step: 1
    unit_of_measurement: "oz"
    icon: mdi:beaker
    mode: box

automation:
  # Sync Tank Capacity (l vs gal)
  - alias: acid_sync_1
    trigger:
      - platform: state
        entity_id: input_number.muriatic_tank
    condition: []
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.muriatic_tank_imperial
          value: "{{(states('input_number.muriatic_tank')|float / 3.78541)| round(0) }}"

  - alias: acid_sync_2
    trigger:
      - platform: state
        entity_id: input_number.muriatic_tank_imperial
    condition: []
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.muriatic_tank
          value: "{{(states('input_number.muriatic_tank_imperial')|float * 3.78541)| round(0) }}"

  # Sync Injection Speed capacity (ml/min vs GPD)
  - alias: acid_speed_sync_1
    trigger:
      - platform: state
        entity_id: input_number.muriatic_speed
    condition: []
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.muriatic_speed_imperial
          value: "{{(states('input_number.muriatic_speed')|float / 2.6287)| round(1) }}"

  - alias: acid_speed_sync_2
    trigger:
      - platform: state
        entity_id: input_number.muriatic_speed_imperial
    condition: []
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.muriatic_speed
          value: "{{(states('input_number.muriatic_speed_imperial')|float * 2.6287)| round(1) }}"

  # Sync Injection quantity (ml vs. oz)
  - alias: acid_inj_sync_1
    trigger:
      - platform: state
        entity_id: input_number.muriatic_inject
    condition: []
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.muriatic_inject_imperial
          value: "{{(states('input_number.muriatic_inject')|float * 0.033814)| round(1) }}"

  - alias: acid_inj_sync_2
    trigger:
      - platform: state
        entity_id: input_number.muriatic_inject_imperial
    condition: []
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.muriatic_inject
          value: "{{(states('input_number.muriatic_inject_imperial')|float / 0.033814)| round(0) }}"

  # Sync Overfeed warning (l/48h vs gal/48h)
  - alias: acid_overfeed_sync_1
    trigger:
      - platform: state
        entity_id: input_number.notify_muriatic_high
    condition: []
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.notify_muriatic_high_imperial
          value: "{{(states('input_number.notify_muriatic_high')|float / 3.78541)| round(1) }}"

  - alias: acid_overfeed_sync_2
    trigger:
      - platform: state
        entity_id: input_number.notify_muriatic_high_imperial
    condition: []
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.notify_muriatic_high
          value: "{{(states('input_number.notify_muriatic_high_imperial')|float * 3.78541)| round(1) }}"

  # Sync Tank Low warning (l vs gal)
  - alias: acid_tank_low_sync_1
    trigger:
      - platform: state
        entity_id: input_number.notify_muriatic_tank
    condition: []
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.notify_muriatic_tank_imperial
          value: "{{(states('input_number.notify_muriatic_tank')|float / 3.78541)| round(1) }}"
      - service: automation.trigger
        entity_id: automation.muriatic_tank_low

  - alias: acid_tank_low_sync_2
    trigger:
      - platform: state
        entity_id: input_number.notify_muriatic_tank_imperial
    condition: []
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.notify_muriatic_tank
          value: "{{(states('input_number.notify_muriatic_tank_imperial')|float * 3.78541)| round(1) }}"
      - service: automation.trigger
        entity_id: automation.muriatic_tank_low

  # Muriatic Section
  - alias: muriatic_every_hour
    trigger:
      - platform: time_pattern
        minutes: 1
    condition: []
    action:
      # update the tank level
      - service: input_number.set_value
        data_template:
          entity_id: input_number.muriatic_tank
          value: " {{ [0, (states('input_number.muriatic_tank')|float - ( states('sensor.muriatic_on_last_hour')|float * states('input_number.muriatic_speed')|int * 6 / 100 ))]|max | round(2) }} "
      # turn off acid injection if the tank is empty
      - condition: numeric_state
        entity_id: input_number.muriatic_tank
        below: 0.1
      - condition: state
        entity_id: input_boolean.lock_muriatic
        state: "off"
      - entity_id: switch.ph
        service: switch.turn_off
      - entity_id: input_boolean.lock_muriatic
        service: input_boolean.turn_on
      - data_template:
          title: "Muriatic Tank Depleted!"
          message: "Acid injection disabled."
        service: notify.notify

  - alias: muriatic_tank_low
    trigger:
      platform: template
      value_template: >-
        {% if states('input_number.muriatic_tank') < states('input_number.notify_muriatic_tank') %}
          true
        {% endif %}
    condition:
      condition: numeric_state
      entity_id: input_number.notify_muriatic_tank
      above: 0
    action:
      - data_template:
          title: "Muriatic Tank Low!"
          message: >-
            {% if is_state("input_boolean.imperial", "on") %}
              {{states('input_number.muriatic_tank_imperial')|float}} gallons left!
            {% else %}
              {{states('input_number.muriatic_tank')|float}} liters left!
            {% endif %}
        service: notify.notify

  - alias: muriatic_high
    trigger:
      platform: template
      value_template: >-
        {% if states('input_number.notify_muriatic_high')|float> 0 and
               states('sensor.muriatic_on_last_48h')|float * states('input_number.muriatic_speed')|float * 60 / 1000 > states('input_number.notify_muriatic_high')|float %}
          true
        {% endif %}
    condition: []
    action:
      - entity_id: switch.ph
        service: switch.turn_off
      - entity_id: input_boolean.lock_muriatic
        service: input_boolean.turn_on
      - data_template:
          title: "Acid Injection Blocked!"
          message: >-
            {% if is_state("input_boolean.imperial", "on") %}
              Injected more than {{states('input_number.notify_muriatic_high_imperial')|float|round(1)}} gallons in 48h!
            {% else %}
              Injected more than {{states('input_number.notify_muriatic_high')|float|round(1)}} liters in 48h!
            {% endif %}
        service: notify.notify

  - alias: muriatic_set
    # called when the pump starts, or when the ph target changes
    trigger:
      - platform: state
        entity_id: input_number.ph
      - platform: state
        entity_id: input_number.ph_target
      - platform: state
        entity_id: input_number.muriatic_concentration
      - platform: state
        entity_id: input_number.capacity_metric
    condition: []
    action:
      # TODO figure out this formula, needs documentation
      - service: input_number.set_value
        data_template:
          entity_id: input_number.muriatic_inject
          value: " {{ ( states('input_number.capacity_metric')|float * ( 10 ** (8 - states('input_number.ph_target')|float ) - 10 ** (8 - states('input_number.ph')|float ) ) * (126.19 / states('input_number.muriatic_concentration')|float ),0 )|max |round(0)|int }} "

  - alias: muriatic_inject
    trigger:
      - platform: event
        event_type: event_muriatic_inject
    condition:
      - condition: state
        entity_id: input_boolean.lock_muriatic
        state: "off"
      - condition: state
        entity_id: switch.pump
        state: "on"
      - condition: numeric_state
        entity_id: input_number.muriatic_inject
        value_template: "{{ states('input_number.muriatic_inject')|float / states('input_number.capacity_metric')|float }}"
        above: 5.0
        below: 100.0
    action:
      - entity_id: switch.ph
        service: switch.turn_on
      - data_template:
          title: "Acid Injection Start"
          message: >-
            {% if is_state("input_boolean.imperial", "on") %}
              Adding {{(states('input_number.muriatic_inject')|float * 0.033814)|round(0)}} oz
            {% else %}
              Adding {{states('input_number.muriatic_inject')|float|round(0)}} ml
            {% endif %}
        service: notify.notify
      - delay: 00:00:{{ [0 , 60 * states('input_number.muriatic_inject')|float/ states('input_number.muriatic_speed')|float ]|max|int }}
      - entity_id: switch.ph
        service: switch.turn_off
      - data_template:
          title: "Acid Injection Ended"
          message: Pump ran for {{ [0 , states('input_number.muriatic_inject')|float/ states('input_number.muriatic_speed')|float ]|max|int }} minutes
        service: notify.notify
